name: Deploy to AWS S3

on:
  push:
    branches:
      - main
env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_BUCKET: my-bucket-name-3sa

jobs:
  checks:
    name: Install and do Formatting checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Setup Node 18
        uses: actions/setup-node@v2
        continue-on-error: true
        with:
          node-version: '18'
      - name: Install npm
        run: |
          npm ci
        id: install
      - name: Checks
        run: npm run format-check
        id: format-check
  deploy:
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - name: Check if S3 bucket exists
        run: |
          if aws s3api head-bucket --bucket ${{ env.AWS_S3_BUCKET }} 2>/dev/null; then
            echo "Bucket ${{ env.AWS_S3_BUCKET }} exists"
          else
            echo "Bucket ${{ env.AWS_S3_BUCKET }} does not exist"
            aws s3api create-bucket --bucket ${{ env.AWS_S3_BUCKET }} --region ${{ env.AWS_DEFAULT_REGION }}
          fi
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          SOURCE_DIR: ./src

      - name: Get website URL
        run: |
          URL="http://${{ env.AWS_S3_BUCKET }}.s3.amazonaws.com/index.html"
          echo "Website URL:  $URL"




#name: Deploy to AWS Elastic Beanstalk
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Install dependencies
#        run: npm install
#      - name: Deploy to Elastic Beanstalk
#        uses: einaregilsson/beanstalk-deploy@v16
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          application_name: my-application
#          environment_name: my-environment
#          version_label: ${{ github.sha }}
#          deployment_package: src/


